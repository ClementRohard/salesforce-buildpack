#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories

BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}

BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

### Configure salesforce directories
SALESFORCE_DIR_NAME=".salesforce"
SALESFORCE_DIR=$BUILD_DIR/$SALESFORCE_DIR_NAME
SALESFORCE_CACHE_DIR=$CACHE_DIR/$SALESFORCE_DIR_NAME

### Load dependencies

source $BP_DIR/lib/common.sh
source $BP_DIR/lib/node.sh

### Compile

status "Exporting config vars to environment"
export_env_dir

mkdir -p $SALESFORCE_DIR

install_nodejs $SALESFORCE_CACHE_DIR
# Put node in build dir since the cache is not available at time of deploy
cp -a $SALESFORCE_CACHE_DIR/node $SALESFORCE_DIR/node
export PATH="$SALESFORCE_DIR/node/bin":$PATH

status "Copying deploy script to .salesforce/deploy"
cp -R $BP_DIR/lib/* $SALESFORCE_DIR/
cp $BP_DIR/package.json $SALESFORCE_DIR/package.json

echo ".salesforce/node/bin/node .salesforce/deploy.js" > $SALESFORCE_DIR/deploy
chmod +x $SALESFORCE_DIR/deploy

status "Installing modules"
cd $SALESFORCE_DIR
npm install | indent

echo ""
echo "Configure your application to invoke '$SALESFORCE_DIR_NAME/deploy' in your release phase script or Procfile"
