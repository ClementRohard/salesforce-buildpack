#!/usr/bin/env bash

# Fail fast and fail hard.
set -eo pipefail

# debug the env
env

env_dir=$3

export_env_dir() {
  whitelist_regex=${2:-'^(FORCE_COM_ALM_)'}
  blacklist_regex=${3:-'^(PATH|GIT_DIR|CPATH|CPPATH|LD_PRELOAD|LIBRARY_PATH)$'}
  if [ -d "$env_dir" ]; then
    for e in $(ls $env_dir); do
      echo "$e" | grep -E "$whitelist_regex" | grep -qvE "$blacklist_regex" &&
      export "$e=$(cat $env_dir/$e)"
      :
    done
  fi
}

export_env_dir
export BUILD_DIR=$1


echo "BUILD_DIR: $BUILD_DIR"
echo "SOURCE_VERSION: $SOURCE_VERSION"

BUILD_TOOL_URL=https://github.com/forcedotcom/force-com-buildpack/releases/download/1.0.0-DEMO-4/driver-prototype.jar
JAR_NAME=appcloud-client.jar
CLIENT_DIR=lib
BUILD_TOOL_DEST=$BUILD_DIR/$CLIENT_DIR
BUILD_TOOL_JAR=$BUILD_TOOL_DEST/$JAR_NAME

mkdir -p $BUILD_TOOL_DEST
wget $BUILD_TOOL_URL -O $BUILD_TOOL_JAR

# figure out the source version and write it to a file to be used in runtime
# SOURCE_VERSION unfortunately isn't the same as the SHA in GitHub
# The source only comes from the tarball for review apps.
# If you deploy from the Heroku button it will be the URL of the repo (possibly with the
# branch name if you clicked from the branch). In this case we won't write out the SHA.
TARBALL_PATTERN='"source_url":.*\.gz/\([A-Za-z0-9]*\)'
if echo $RECEIVE_DATA | grep -q $TARBALL_PATTERN; then
    GITHUB_SHA=$(echo $RECEIVE_DATA | sed "s|.*$TARBALL_PATTERN.*|\1|")
    echo "GITHUB_SHA: $GITHUB_SHA"
    echo "$GITHUB_SHA" > $BUILD_TOOL_DEST/SOURCE_VERSION
else
    echo "GITHUB_SHA not found"
fi

# write out testrunner script
mkdir -p $BUILD_DIR/bin
cp lib/server.py $BUILD_DIR/$CLIENT_DIR/server.py

cat > $BUILD_DIR/bin/runtests << EOF
#!/usr/bin/env bash
export SOURCE_VERSION=\$(< $CLIENT_DIR/SOURCE_VERSION)
java -cp $CLIENT_DIR/$JAR_NAME TestRunner &
python $CLIENT_DIR/server.py
EOF

chmod +x $BUILD_DIR/bin/runtests

# deploy source code
echo "----> Force.com deploy phase"
java -cp $BUILD_TOOL_JAR -DforceComUrlFile=$env_dir/FORCE_COM_ALM_URL Main
