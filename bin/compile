#!/usr/bin/env bash
# bin/compile <build-dir> <cache-dir> <env-dir>

### Configure environment

set -o errexit    # always exit on error
set -o pipefail   # don't ignore exit codes when piping output
set -o nounset    # fail on unset variables
unset GIT_DIR     # Avoid GIT_DIR leak from previous build steps

### Configure directories
BUILD_DIR=${1:-}
CACHE_DIR=${2:-}
ENV_DIR=${3:-}
BP_DIR=$(cd $(dirname ${0:-}); cd ..; pwd)

### Configure salesforce directories
SALESFORCE_DIR_NAME=".salesforce"
SALESFORCE_DIR=$BUILD_DIR/$SALESFORCE_DIR_NAME
SALESFORCE_CACHE_DIR=$CACHE_DIR/$SALESFORCE_DIR_NAME

### Load dependencies
source $BP_DIR/lib/common.sh
source $BP_DIR/lib/node.sh
source $BP_DIR/lib/libs.sh

echo ""
status "Welcome to Salesforce Buildpack!!"
echo ""

# present of files below determine how we handle deployment
if [ -f $1/salesforce/src/package.xml ]; then
    log "Found Force.com Metadata API project"
    export SALESFORCE_WORKSPACE=false
elif [ -f $1/config.json ]; then
    log "Found Force.com workspace project"
    export SALESFORCE_WORKSPACE=true
fi

### Compile
status "Exporting config vars to environment"
export_env_dir

mkdir -p $SALESFORCE_DIR
export SALESFORCE_DIR=$SALESFORCE_DIR

install_nodejs $SALESFORCE_CACHE_DIR
# Put node in build dir since the cache is not available at time of deploy
cp -a $SALESFORCE_CACHE_DIR/node $SALESFORCE_DIR/node
export PATH="$SALESFORCE_DIR/node/bin":$PATH

# set defaults for optional config vars
if [[ ! -v SALESFORCE_BYOO ]]; then
   SALESFORCE_BYOO=false
fi

if [[ ! -v SALESFORCE_BUILDPACK_VERBOSE ]]; then
   SALESFORCE_BUILDPACK_VERBOSE=false
fi

status "Generating release phase deploy script to $SALESFORCE_DIR_NAME/deploy"
cp -R $BP_DIR/lib/* $SALESFORCE_DIR/
cp $BP_DIR/package.json $SALESFORCE_DIR/package.json
# write script triggering node-based deployment to-be-invoked bin/release
echo "export SALESFORCE_WORKSPACE=$SALESFORCE_WORKSPACE" > $SALESFORCE_DIR/deploy
echo "export SALESFORCE_BYOO=$SALESFORCE_BYOO" >> $SALESFORCE_DIR/deploy
echo "export SALESFORCE_BUILDPACK_VERBOSE=$SALESFORCE_BUILDPACK_VERBOSE" >> $SALESFORCE_DIR/deploy
# relative dir as BUILD_DIR not same in release phase
echo "export SALESFORCE_DIR=$SALESFORCE_DIR_NAME" >> $SALESFORCE_DIR/deploy
# not needed for release, but adding until release is broken out from force.js
echo "export HEROKU_APP_NAME=$HEROKU_APP_NAME" >> $SALESFORCE_DIR/deploy
echo "$SALESFORCE_DIR_NAME/node/bin/node $SALESFORCE_DIR_NAME/force.js release" >> $SALESFORCE_DIR/deploy
chmod +x $SALESFORCE_DIR/deploy
log "Script: `cat $SALESFORCE_DIR/deploy`"

status "Generating test phase script to $SALESFORCE_DIR_NAME/test"
# write script to-be-invoked via test phase per app.json
echo "export SALESFORCE_WORKSPACE=$SALESFORCE_WORKSPACE" > $SALESFORCE_DIR/test
echo "export SALESFORCE_BUILDPACK_VERBOSE=$SALESFORCE_BUILDPACK_VERBOSE" >> $SALESFORCE_DIR/test
# relative dir as BUILD_DIR not same in test phase
echo "export SALESFORCE_DIR=$SALESFORCE_DIR_NAME" >> $SALESFORCE_DIR/test
# not needed for release, but adding until release is broken out from force.js
echo "export HEROKU_APP_NAME=$HEROKU_APP_NAME" >> $SALESFORCE_DIR/test
echo "$SALESFORCE_DIR_NAME/node/bin/node $SALESFORCE_DIR_NAME/force.js test" >> $SALESFORCE_DIR/test
chmod +x $SALESFORCE_DIR/test
log "Script: `cat $SALESFORCE_DIR/test`"

status "Installing node modules"
cd $SALESFORCE_DIR
npm install | indent

# double-check that node is installed
if [ ! -f $SALESFORCE_DIR/node/bin/node ]; then
    status "! Node not found at $SALESFORCE_DIR/node/bin/node"
    exit 1
fi

# install secret tool used by appcloud
# FIXME: disabled for now
#install_libsecret

# delegate actual source deployment to node script
status "Invoking $SALESFORCE_DIR/force.js compile phase..."
$SALESFORCE_DIR/node/bin/node $SALESFORCE_DIR/force.js compile

# REVIEWME: echo before 'force.js compile' call?
echo ""
echo "To test, configure your application to invoke '$SALESFORCE_DIR_NAME/test' in your test section of app.json to run Apex tests via Heroku CI"
echo ""
echo "To deploy source to org, configure your application to invoke '$SALESFORCE_DIR_NAME/deploy' in your release phase script or Procfile"
